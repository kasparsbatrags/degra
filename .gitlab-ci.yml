variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

services:
  - docker:20-dind

stages:
  - build
  - test

before_script:
  - docker info

build:
  stage: build
  image: docker:20
  script:
    - docker build -t my-custom-docker-image:latest .
    - docker save my-custom-docker-image:latest -o my-custom-docker-image.tar
    - gzip my-custom-docker-image.tar
  artifacts:
    paths:
      - my-custom-docker-image.tar.gz
    expire_in: 1 day

sonarcloud-check:
  stage: test
  image: docker:20
  services:
    - docker:20-dind
  needs:
    - build
  script:
    - ls -al  # PƒÅrbaudiet, vai artefakts ir pieejams
    - if [ -f my-custom-docker-image.tar.gz ]; then echo "File exists"; else echo "File does not exist"; fi
    - gzip -d my-custom-docker-image.tar.gz
    - docker load -i my-custom-docker-image.tar
    - docker run --rm -v $CI_PROJECT_DIR:/usr/src/app my-custom-docker-image:latest sh -c "cd /usr/src/app && git init && git remote add origin $CI_REPOSITORY_URL && git fetch --all && git reset --hard origin/$CI_COMMIT_REF_NAME && Xvfb :99 -screen 0 1024x768x16 & export DISPLAY=:99 && mvn verify sonar:sonar -Dsonar.projectKey=kaspars.batrags_degra -Djavafx.version=17"
  dependencies:
    - build
  only:
    - merge_requests
    - master
    - develop
